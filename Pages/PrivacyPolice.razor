@inherits LayoutComponentBase
@page "/PrivacyPolice"
@layout MainLayout
@inject ILanguageContainerService languageContainer


<div class="max-w-screen-md px-4 mx-auto text-lg leading-relaxed text-gray-700 lg:px-0">


    <div class="containerSeparator">
        <div class="max-w-screen-lg">

            <h1 class="TittleStyle">@languageContainer.Keys["Privacy"]</h1>

            <Separator></Separator>

            <div class="paragrapSeparator">
                <p class="">@languageContainer.Keys["PrivacyP1"]</p>

                <p class="">@languageContainer.Keys["PrivacyP2"]</p>

                <p class="">@languageContainer.Keys["PrivacyP3"]</p>
            </div>
        </div>
    </div>
    <div class="containerSeparator bg-gray-100">
        <div class="max-w-screen-lg">
            <h1 class="TittleStyle">@languageContainer.Keys["PrivacyInformation"]</h1>

            <Separator></Separator>

            <div class="paragrapSeparator">
                <p class="">@languageContainer.Keys["PrivacyInformationText1"]</p>
                <p class="">@languageContainer.Keys["PrivacyInformationText2"]</p>
                <p class="">@languageContainer.Keys["PrivacyInformationText3"]</p>
            </div>
        </div>
    </div>

    <div class="containerSeparator">
        <div class="max-w-screen-lg">
            <h1 class="TittleStyle">@languageContainer.Keys["PrivacyUseOf"]</h1>

            <Separator></Separator>

            <div class="paragrapSeparator">
                <p class="">@languageContainer.Keys["PrivacyUseOfText1"]</p>
                <p class="">@languageContainer.Keys["PrivacyUseOfText2"]</p>
                <p class="">@languageContainer.Keys["PrivacyUseOfText3"]</p>
            </div>
        </div>
    </div>
    <div class="containerSeparator bg-gray-100">
        <div class="max-w-screen-lg">
            <h1 class="TittleStyle">@languageContainer.Keys["PrivacyHowWe"]</h1>

            <Separator></Separator>

            <div class="paragrapSeparator">
                <p>@languageContainer.Keys["PrivacyHowWeText"]</p>
            </div>
            <div class="pl-4 border-l-4 rounded border-secondary">
                <ul class="listSeparator">
                    <li class=" flex"> <ArrowList></ArrowList> @languageContainer.Keys["PrivacyHowWeList1"]</li>
                    <li class=" flex"> <ArrowList></ArrowList> @languageContainer.Keys["PrivacyHowWeList2"]</li>
                    <li class=" flex"> <ArrowList></ArrowList> @languageContainer.Keys["PrivacyHowWeList3"]</li>
                    <li class=" flex"> <ArrowList></ArrowList> @languageContainer.Keys["PrivacyHowWeList4"]</li>
                    <li class=" flex"> <ArrowList></ArrowList> @languageContainer.Keys["PrivacyHowWeList5"]</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="containerSeparator">
        <div class="max-w-screen-lg">
            <h1 class="TittleStyle">@languageContainer.Keys["PrivacyAccess"]</h1>

            <Separator></Separator>

            <div class="paragrapSeparator">
                @languageContainer.Keys["PrivacyAccessText"]
            </div>
        </div>
    </div>
    <div class="containerSeparator bg-gray-100">
        <div class="max-w-screen-lg">
            <h1 class="TittleStyle">@languageContainer.Keys["PrivacySecurity"]</h1>

            <Separator></Separator>

            <div class="paragrapSeparator">
                @languageContainer.Keys["PrivacySecurityText"]
            </div>
        </div>
    </div>
</div>


    @code {

        protected override void OnInitialized()
        {
            // This will make the current component gets updated whenever you change the language of the application
            languageContainer.InitLocalizedComponent(this);

        }

    }
